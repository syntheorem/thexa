cabal-version: 2.2

name:           thexa
version:        1.0.0.0
synopsis:       Template Haskell lEXical Analyzer
license:        MIT
license-file:   LICENSE.txt
author:         syntheorem
maintainer:     syntheorem@gmail.com
homepage:       https://github.com/syntheorem/thexa
category:       Development, Parsing
build-type:     Simple

extra-doc-files:
  README.md
  SYNTAX.md

extra-source-files:
  unicode/*.txt
  bench/*.txt

common deps
  build-depends:
      base >=4.8
    , bytestring >=0.10.10 && <0.12
    , containers ^>=0.6
    , file-embed ^>=0.0.10
    , hashable >=1.2 && <1.4
    , hashtables ^>=1.2.3
    , megaparsec ^>=9.0
    , mtl ^>=2.2
    , primitive >=0.6 && <0.8
    , synlude ^>=0.1
    , template-haskell >=2.16
    , th-compat ^>=0.1
    , th-lift-instances ^>=0.1.18
    , vector ^>=0.12
    , utf8-string ^>=1.0

  mixins:
      base hiding (Prelude)
    , synlude (Synlude as Prelude)

common lang
  default-language: Haskell2010
  default-extensions:
    AllowAmbiguousTypes
    BangPatterns
    BinaryLiterals
    BlockArguments
    ConstraintKinds
    DeriveAnyClass
    DeriveGeneric
    DeriveLift
    DerivingStrategies
    FlexibleContexts
    FlexibleInstances
    GeneralizedNewtypeDeriving
    ImportQualifiedPost
    InstanceSigs
    LambdaCase
    LiberalTypeSynonyms
    MagicHash
    MultiParamTypeClasses
    NamedFieldPuns
    NoStarIsType
    OverloadedStrings
    ParallelListComp
    PartialTypeSignatures
    QuasiQuotes
    RankNTypes
    RecordWildCards
    RoleAnnotations
    ScopedTypeVariables
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    ViewPatterns

common opts
  ghc-options:
    -Wall
    -Wcompat
    -Wincomplete-uni-patterns
    -Wincomplete-record-updates
    -Wredundant-constraints
    -fwarn-tabs

common exe-opts
  import: opts
  ghc-options:
    -threaded
    -rtsopts
    -with-rtsopts=-N

library
  import: deps, lang, opts
  hs-source-dirs: src
  exposed-modules:
    Thexa
    Thexa.CharSet
    Thexa.Core
    Thexa.Position
    Thexa.Regex
    Thexa.Rule

    Thexa.Internal.CharSet.AST
    Thexa.Internal.DFA
    Thexa.Internal.GrowVector
    Thexa.Internal.IntLike.Class
    Thexa.Internal.IntLike.Map
    Thexa.Internal.IntLike.Set
    Thexa.Internal.NFA
    Thexa.Internal.Regex.AST
    Thexa.Internal.Regex.Compiler
    Thexa.Internal.Regex.Parser
    Thexa.Internal.Regex.QuasiQuoters
    Thexa.Internal.Unicode.Grapheme
    Thexa.Internal.Unicode.Parser
    Thexa.Internal.Unicode.Properties

test-suite spec
  import: deps, lang, exe-opts
  type: exitcode-stdio-1.0
  build-tool-depends: hspec-discover:hspec-discover

  hs-source-dirs: spec, examples
  main-is: Spec.hs
  other-modules:
    Thexa.CharSetSpec
    Thexa.PositionSpec
    Thexa.Regex.CompileSpec
    Thexa.Regex.ParserSpec

    RustLexer.Rules
    Thexa.RustLexerSpec

  build-depends:
      thexa
    , hspec >=2.6 && <2.9
    , hspec-megaparsec ^>=2.2
    , QuickCheck >=2.12 && <2.15

benchmark bench
  import: deps, lang, exe-opts
  type: exitcode-stdio-1.0

  hs-source-dirs: bench
  main-is: Bench.hs
  other-modules:
    Thexa.GraphemeBench

  build-depends:
      thexa
    , criterion >=1 && <2

executable RustLexer
  import: deps, lang, exe-opts
  scope: private

  hs-source-dirs: examples
  main-is: RustLexer/Main.hs
  other-modules:
    RustLexer.Rules

  build-depends:
      thexa
